{
  "accentColor": "{{appsmith.theme.colors.primaryColor}}",
  "allowScroll": false,
  "animateLoading": true,
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "bottomRow": 140,
  "bottomRowBeforeCollapse": 138,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "chartData": {
    "o82yvmu058": {
      "data": "[{\"x\":\"label\",\"y\":50}]",
      "seriesName": ""
    },
    "v8lhk8v2d4": {
      "data": "",
      "seriesName": "2023"
    }
  },
  "chartName": "Sales Report",
  "chartType": "CUSTOM_ECHART",
  "customEChartConfig": "{{ ((chartType) => ( \n(() => {\n  const rows = statpull.data || [];\n  const txt = (Input1?.text || \"\").toLowerCase();\n\n  // --- Step 1: Build sorted list of unique dates ---\n  const dates = [...new Set(rows.map(r => r.collection_date))].sort();\n\n  // --- Step 2: Group data by service_id and date ---\n  const bySvc = {};\n  for (const r of rows) {\n    if (!bySvc[r.service_id]) {\n      bySvc[r.service_id] = {\n        label: `${r.external_id} -- ${r.description}`,\n        byDate: {}\n      };\n    }\n\n    const sum24 = (pfx) =>\n      Array.from({ length: 24 }, (_, i) => Number(r[`${pfx}_${i}`] ?? 0))\n        .reduce((a, b) => a + b, 0);\n\n    // Find peak hour for the day\n    let peakVal = 0;\n    for (let h = 0; h < 24; h++) {\n      const inboundH = Number(r[`inbound_${h}`] ?? 0);\n      const outboundH = Number(r[`outbound_${h}`] ?? 0);\n      const totalH = inboundH + outboundH;\n      if (totalH > peakVal) peakVal = totalH;\n    }\n\n    bySvc[r.service_id].byDate[r.collection_date] = {\n      inbound: sum24('inbound'),\n      outbound: sum24('outbound'),\n      peak: peakVal\n    };\n  }\n\n  // --- Step 3: Text filter helper ---\n  const matchesSearch = (seriesName) => {\n    if (!txt) return true;\n    return seriesName.toLowerCase().includes(txt);\n  };\n\n  // --- Step 4: Build series array ---\n  const series = [];\n  for (const svc of Object.values(bySvc)) {\n    const inbound = dates.map(d => svc.byDate[d]?.inbound ?? 0);\n    const outbound = dates.map(d => svc.byDate[d]?.outbound ?? 0);\n    const peak = dates.map(d => svc.byDate[d]?.peak ?? 0);\n\n    const inboundName = `${svc.label} — inbound`;\n    const outboundName = `${svc.label} — outbound`;\n    const peakName = `${svc.label} — peak`;\n\n    if (matchesSearch(inboundName)) {\n      series.push({\n        name: inboundName,\n        type: 'line',\n        smooth: false,\n        areaStyle: {},\n        stack: 'total',\n        data: inbound,\n        showSymbol: true,\n        showAllSymbol: true,\n        symbolSize: 10\n      });\n    }\n\n    if (matchesSearch(outboundName)) {\n      series.push({\n        name: outboundName,\n        type: 'line',\n        smooth: false,\n        areaStyle: {},\n        stack: 'total',\n        data: outbound,\n        showSymbol: true,\n        showAllSymbol: true,\n        symbolSize: 10\n      });\n    }\n\n    if (matchesSearch(peakName)) {\n      series.push({\n        name: peakName,\n        type: 'bar',\n        stack: 'peakstack',\n        barWidth: 50,\n        data: peak\n      });\n    }\n  }\n\n  // Sort legend alphabetically\n  series.sort((a, b) => a.name.localeCompare(b.name));\n\n  // --- Step 5: Toggle behavior based on SwitchHoverItemOnly ---\n  const tooltipMode = SwitchHoverItemOnly?.isSwitchedOn ? 'item' : 'axis';\n\n  return {\n    title: { text: 'Daily Calls (Inbound/Outbound Lines + Peak Bars)' },\n    tooltip: {\n      trigger: tooltipMode,\n      axisPointer: { type: 'shadow' },\n      formatter: !SwitchHoverItemOnly?.isSwitchedOn\n        ? function (params) {\n            const date = params?.[0]?.axisValueLabel ?? '';\n            return `<b>${date}</b><br/>` + params\n              .map(p => `${p.marker} ${p.seriesName}: ${p.value}`)\n              .join('<br/>');\n          }\n        : undefined\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'vertical',\n      right: 1,\n      top: 'top',\n      align: 'right',\n      selectedMode: 'multiple',\n      selector: [\n        { type: 'all', title: 'Show All' },\n        { type: 'inverse', title: 'Single View' }\n      ]\n    },\n    emphasis: { focus: 'series', blurScope: 'coordinateSystem' },\n    grid: { left: 60, right: 180, top: 50, bottom: 40 },\n    xAxis: { type: 'category', data: dates },\n    yAxis: { type: 'value', name: 'Calls/day' },\n    series\n  };\n})()\n))(dayStats.chartType) }}",
  "customFusionChartConfig": {
    "dataSource": {
      "chart": {
        "alignCaptionWithCanvas": 1,
        "canvasPadding": "0",
        "caption": "Sales Report",
        "captionAlignment": "center",
        "captionFontColor": "#231F20",
        "captionFontSize": "24",
        "captionPadding": "20",
        "chartBottomMargin": "10",
        "chartLeftMargin": "20",
        "chartRightMargin": "40",
        "chartTopMargin": "10",
        "labelFontColor": "#716e6e",
        "labelFontSize": "12",
        "legendIconAlpha": "100",
        "legendIconBgAlpha": "100",
        "legendIconSides": "4",
        "legendPosition": "top",
        "theme": "fusion",
        "xAxisName": "Product Line",
        "xAxisNameFontColor": "#716e6e",
        "xAxisNameFontSize": "14",
        "yAxisName": "Revenue($)",
        "yAxisNameFontColor": "#716e6e",
        "yAxisNameFontSize": "14",
        "yAxisValueFontColor": "#716e6e",
        "yAxisValueFontSize": "12"
      },
      "data": [
        {
          "label": "Product1",
          "value": 20000
        },
        {
          "label": "Product2",
          "value": 22000
        },
        {
          "label": "Product3",
          "value": 32000
        }
      ]
    },
    "type": "column2d"
  },
  "dynamicBindingPathList": [
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "accentColor"
    },
    {
      "key": "fontFamily"
    },
    {
      "key": "isVisible"
    },
    {
      "key": "customEChartConfig"
    }
  ],
  "dynamicPropertyPathList": [
    {
      "key": "isVisible"
    }
  ],
  "dynamicTriggerPathList": [],
  "flexVerticalAlignment": "start",
  "fontFamily": "{{appsmith.theme.fontFamily.appFont}}",
  "isLoading": false,
  "isVisible": "{{Checkbox1.isChecked === false}}",
  "key": "wqq8lp792z",
  "labelOrientation": "auto",
  "leftColumn": 2,
  "minWidth": 450,
  "mobileBottomRow": 45,
  "mobileLeftColumn": 5,
  "mobileRightColumn": 29,
  "mobileTopRow": 13,
  "needsErrorInfo": true,
  "originalBottomRow": 139,
  "originalTopRow": 8,
  "parentColumnSpace": 18.03125,
  "parentId": "ex9m4xi9sg",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 64,
  "showDataPointLabel": false,
  "topRow": 9,
  "topRowBeforeCollapse": 7,
  "type": "CHART_WIDGET",
  "version": 1,
  "widgetId": "feu37ava5c",
  "widgetName": "dayStats",
  "xAxisName": "Product Line",
  "yAxisName": "Revenue($)"
}